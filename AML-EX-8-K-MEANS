 import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

df=pd.read_csv("C:/Users/HP/OneDrive/Desktop/machine learning datasets/IRIS.csv")
df

x=df[['sepal_lenght','sepal_width','petal_lenght','petal_width']]
y=df['class']

from sklearn.model_selection import train_test_split

X_train,x_test,Y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=26)

from sklearn.cluster import KMeans

k=KMeans(n_clusters=5)

k.fit(X_train,Y_train)

y_pred=k.predict(x_test)
y_pred

from sklearn.metrics import silhouette_score

ss=silhouette_score(x_test,y_pred)
ss

plt.figure(figsize=(8, 6))
sns.scatterplot(x='sepal_lenght', y='sepal_width', hue='class', data=df, palette='bright', 
s=100)
plt.title('K-means Clustering on Iris Data')
plt.show()

#K-Means Clustering is an unsupervised learning algorithm used to group data points into K clusters based on similarity.
#It tries to minimize the distance between data points and their respective cluster centroids.
#The Silhouette Score measures how well a data point fits within its assigned cluster compared to other clusters.
#It ranges from -1 to 1:
#1: Perfectly clustered; the point is far from neighboring clusters.
#0: The point is on or very close to the boundary between clusters.
#-1: Incorrect clustering; the point is closer to a neighboring cluster than its own.

