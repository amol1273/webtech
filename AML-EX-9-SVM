 import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline

df=pd.read_csv("C:/Users/HP/OneDrive/Desktop/machine learning datasets/mushrooms.csv")
df

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()

for column in df.columns:
    df[column]=le.fit_transform(df[column])
df

x=df[['cap-shape','cap-surface','cap-color','bruises','odor','gill-attachment','gill-spacing','gill-size','gill-color','stalk-surface-below-ring','stalk-color-above-ring','stalk-color-below-ring','veil-type','veil-color','ring-number','ring-type','spore-print-color','population','habitat']]
y=df['class']

from sklearn.model_selection import train_test_split

X_train,x_test,Y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=26)

from sklearn.svm import SVC

svc=SVC(C=1.0,degree=3)
svc.fit(X_train,Y_train)

y_pred=svc.predict(x_test)
y_pred

from sklearn.metrics import confusion_matrix,classification_report,accuracy_score

cm=confusion_matrix(y_test,y_pred)
print('Confusion Matrics ',cm)

cr=classification_report(y_test,y_pred)
print('Classification Report ',cr)

ac=accuracy_score(y_test,y_pred)
print('Accuracy ',ac)

#Support Vector Machine (SVM) is a supervised machine learning algorithm used for both classification and regression tasks.
#It finds the optimal hyperplane that best separates data points belonging to different classes.

#SVC (Support Vector Classifier) is the classification implementation of SVM in the scikit-learn library.
#It tries to classify data points by finding the best hyperplane and supports linear and non-linear kernels for complex data.
